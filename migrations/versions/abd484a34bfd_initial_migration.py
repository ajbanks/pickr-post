"""Initial migration

Revision ID: abd484a34bfd
Revises: 
Create Date: 2023-10-14 14:20:16.012041

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'abd484a34bfd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity_log',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=40), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.Column('event', sa.String(length=150), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='pickr'
    )
    op.create_table('niche',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('category', sa.String(length=255), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_custom', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='pickr'
    )
    op.create_table('tweet',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('created_at', sa.String(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('retweets', sa.Integer(), nullable=True),
    sa.Column('likes', sa.Integer(), nullable=True),
    sa.Column('retweet_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='pickr'
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=40), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    schema='pickr'
    )
    op.create_table('modeled_topic',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=1000), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('trend_type', sa.String(length=32), nullable=True),
    sa.Column('niche_id', sa.UUID(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['niche_id'], ['pickr.niche.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='pickr'
    )
    op.create_table('stripe_subscription',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', postgresql.ENUM('active', 'incomplete', 'incomplete_expired', 'past_due', 'canceled', 'unpaid', 'paused', 'trialing', name='stripesubscriptionstatus'), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=255), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=False),
    sa.Column('stripe_invoice_id', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['pickr.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='pickr'
    )
    op.create_table('subreddit',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('reddit_id', sa.String(length=64), nullable=True),
    sa.Column('niche_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['niche_id'], ['pickr.niche.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='pickr'
    )
    op.create_table('user_niche_assoc',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('niche_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['niche_id'], ['pickr.niche.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['pickr.user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'niche_id'),
    schema='pickr'
    )
    op.create_table('generated_post',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('information_type', sa.String(length=64), nullable=True),
    sa.Column('topic_label', sa.String(), nullable=True),
    sa.Column('modeled_topic_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['modeled_topic_id'], ['pickr.modeled_topic.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='pickr'
    )
    with op.batch_alter_table('generated_post', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pickr_generated_post_modeled_topic_id'), ['modeled_topic_id'], unique=False)

    op.create_table('reddit',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('reddit_id', sa.String(length=64), nullable=True),
    sa.Column('author', sa.String(length=128), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('body', sa.String(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('clean_text', sa.String(), nullable=True),
    sa.Column('subreddit_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['subreddit_id'], ['pickr.subreddit.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='pickr'
    )
    with op.batch_alter_table('reddit', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pickr_reddit_reddit_id'), ['reddit_id'], unique=True)

    op.create_table('tweet_modeled_topic_assoc',
    sa.Column('tweet_id', sa.BigInteger(), nullable=False),
    sa.Column('modeled_topic_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['modeled_topic_id'], ['pickr.modeled_topic.id'], ),
    sa.ForeignKeyConstraint(['tweet_id'], ['pickr.tweet.id'], ),
    sa.PrimaryKeyConstraint('tweet_id', 'modeled_topic_id'),
    schema='pickr'
    )
    op.create_table('reddit_modeled_topic_assoc',
    sa.Column('reddit_id', sa.UUID(), nullable=False),
    sa.Column('modeled_topic_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['modeled_topic_id'], ['pickr.modeled_topic.id'], ),
    sa.ForeignKeyConstraint(['reddit_id'], ['pickr.reddit.id'], ),
    sa.PrimaryKeyConstraint('reddit_id', 'modeled_topic_id'),
    schema='pickr'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reddit_modeled_topic_assoc', schema='pickr')
    op.drop_table('tweet_modeled_topic_assoc', schema='pickr')
    with op.batch_alter_table('reddit', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pickr_reddit_reddit_id'))

    op.drop_table('reddit', schema='pickr')
    with op.batch_alter_table('generated_post', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pickr_generated_post_modeled_topic_id'))

    op.drop_table('generated_post', schema='pickr')
    op.drop_table('user_niche_assoc', schema='pickr')
    op.drop_table('subreddit', schema='pickr')
    op.drop_table('stripe_subscription', schema='pickr')
    op.drop_table('modeled_topic', schema='pickr')
    op.drop_table('user', schema='pickr')
    op.drop_table('tweet', schema='pickr')
    op.drop_table('niche', schema='pickr')
    op.drop_table('activity_log', schema='pickr')
    # ### end Alembic commands ###
